# suppress inspection "SpringBootApplicationProperties" for whole file

#vanaf spring 2.5.0:
#spring.jpa.defer-datasource-initialization=true

spring.jpa.show-sql=true

###### DB-creation option 1: h2-mem
##disable flyway - it can be useful to do this *temporarily* in dev env
##db is auto-generated (no flyway) and initialized from data.sql:
#spring.flyway.enabled=false
#spring.datasource.initialization-mode=always
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.datasource.url=jdbc:h2:mem:books
#spring.datasource.username=sa
#spring.datasource.password=

###### DB-creation option 2: h2-file with flyway
#if I want to test with a simple persistent database (eg to test flyway updates) -> h2 file
#data will be stored in the file ./books.mv.db
# --> throw away that file if you want to start from scratch
#activate flyway:
#spring.flyway.enabled=true
#spring.jpa.hibernate.ddl-auto=validate
#spring.datasource.initialization-mode=never
#spring.datasource.url=jdbc:h2:file:./books
#spring.datasource.username=sa
#spring.datasource.password=

###### DB-creation option 3: local postgresql db with flyway
#if I want to test if flyway update scripts have proper postgres syntax
#activate flyway:
spring.flyway.enabled=true
spring.jpa.hibernate.ddl-auto=validate
spring.datasource.initialization-mode=never
spring.datasource.url=jdbc:postgresql://localhost:5432/booksdb
spring.datasource.username=booksuser
spring.datasource.password=test123




##### security
#disable spring-security in dev-mode - can be useful if you want to test server-requests easily in postman:
disable.security.for.test.purposes=false
